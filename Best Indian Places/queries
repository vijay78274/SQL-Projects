Q1. List all forts (type = 'Fort') in the North zone.
select *from places where type='fort' and zone='Northern';

Q2. Show every spot in Karnataka with a rating ≥ 4.5.
select *From places where rating >= 4.5; 

Q3. Retrieve attractions that allow DSLRs, charge an entry fee ≤ ₹100, and are open on Sundays..
select *From places where dslr_allowed='Yes' and entr_fee<=100 and off!='Sunday';

Q4. Top 10 attractions by rating, breaking ties by the lowest entry fee
select * from places order by rating desc, entr_fee asc limit 10;

Q5. For the city Jaipur, list spots newest to oldest by estb_year.
select *from places where city='Jaipur' order by estb_year desc;

Q6. Count how many attractions each state has; display states with ≥ 10 spots.
select state, count(id) as num from places group by state having count(id)>=10;

Q7. Compute the average entry fee per type
select type, avg(entr_fee) from places group by type;

Q8. Find the minimum, maximum, and average rating for every zone.
select zone, min(rating), max(rating), avg(rating) from places group by zone;

Q9. Create a list that labels each spot as ‘Budget’ (entr_fee < 100), ‘Mid-range’ (₹100-₹500), or ‘Premium’ (> ₹500).
select entr_fee, 
(case when entr_fee<100 then 'Budget'
when entr_fee>=100 and entr_fee<=500 then 'Mid-range' 
else 'Premium' end) as Category
from places;

Q10. For each state, compute the percentage of attractions that allow DSLRs.
select state, sum(case when dslr_allowed='Yes' then 1 else 0 end)*100/count(*) as percent 
from places group by state;

Q11. List sites that have been established for more than 100 years.
select *, year(current_date())-estb_year as diff from places where year(current_date())-estb_year<=100;

Q12. How the five most recently established museums.
select * from places order by estbl_year desc limit 5;

Q13. Identify attractions whose entr_fee is below the state’s average entry fee.
select *
from places ts
where entr_fee < (select avg(entr_fee) from places where state=ts.state);

Q14. List the states whose highest rated attraction has a rating below 4.7
select state, max(rating) as max 
from places
group by state having max<4.7; 

Q15. Using a CTE, compute each state’s median entry fee; list the three states with the highest medians.
with cte as
(
	select state, avg(entr_fee) as median from places group by state
)
select *from cte order by median desc limit 3;

Q16. Group rank with states.
with cte as
(
	select state, estb_year, rank() over (partition by state order by estb_year) from places
)
select *from cte;

Q17. For every state, rank attractions by review_in_lakh (most‑reviewed = rank 1)
select state, review_in_lakh, 
rank() over (partition by state order by review_in_lakh desc)
from places;

Q18. Calculate a running total of attractions established over the years for the entire table.
select estb_year, count(*) over (partition by estb_year) from places;  

Q19. find all attractions whose signification field mentions ‘life’.
select *from places where signification like '%life%';

Q20. Return names that ends with “Fort” and allow DSLRs.
select name from places where name like '%Fort' and dslr_allowed='Yes';
